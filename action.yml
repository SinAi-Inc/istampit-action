name: iStampit Timestamp
description: Stamp build artifacts with OpenTimestamps
author: SinAi-Inc
branding:
  icon: lock
  color: blue

inputs:
  paths:
    description: Comma-separated glob(s) of files to stamp (supports recursive **)
    required: true
  upgrade:
    description: Set to 'true' to attempt upgrading proofs after stamping
    required: false
    default: 'false'

outputs:
  receipts:
    description: JSON array string of .ots receipt paths
    value: ${{ steps.stamp.outputs.receipts }}

runs:
  using: composite
  steps:
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install OpenTimestamps client
      shell: bash
      run: pip install --upgrade pip opentimestamps-client

    - name: Stamp artifacts
      id: stamp
      shell: bash
      run: |
        set -euo pipefail
    python <<'PY'
    import glob, os, subprocess, json, sys
    raw = "${{ inputs.paths }}"
    patterns = [p for p in raw.split(',') if p.strip()]
    files = [f for g in patterns for f in glob.glob(g.strip(), recursive=True)]
    if not files:
      print('warning: no files matched', file=sys.stderr)
    receipts = []
    for f in files:
      subprocess.check_call(['ots', 'stamp', f])
      r = f + '.ots'
      if "${{ inputs.upgrade }}".lower() == "true":
        subprocess.call(['ots', 'upgrade', r])
      receipts.append(r)
    out = json.dumps(receipts)
    gh_out = os.environ.get('GITHUB_OUTPUT')
    if gh_out:
      with open(gh_out, 'a', encoding='utf-8') as fh:
        fh.write(f"receipts={out}\n")
    PY
